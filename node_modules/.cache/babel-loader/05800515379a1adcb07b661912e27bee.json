{"ast":null,"code":"var _jsxFileName = \"/Users/bmarshall/react-library/src/components/Toast/Toast.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '../';\nimport styles from './Toast.module.scss';\nimport classnames from 'classnames';\nexport default function Toast({\n  className,\n  type,\n  children,\n  title,\n  onClose,\n  onHover,\n  onBlur\n}) {\n  const toastClassName = classnames(styles.toast, {\n    [styles.default]: !type,\n    [className]: className\n  });\n  return React.createElement(\"div\", {\n    className: toastClassName,\n    \"data-toast\": true,\n    onMouseEnter: onHover,\n    onMouseLeave: onBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, type ? React.createElement(Icon, {\n    width: \"44px\",\n    name: type,\n    className: styles.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: styles.children,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, children || title), React.createElement(\"button\", {\n    className: styles.close,\n    \"data-close\": true,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    width: \"12px\",\n    name: \"close\",\n    className: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })));\n}\nToast.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  className: PropTypes.string,\n  onBlur: PropTypes.func,\n  onHover: PropTypes.func,\n  onClose: PropTypes.func,\n  type: PropTypes.string // success, info, warning, error, undefined\n\n};\nToast.defaultProps = {\n  isOpen: true\n};","map":{"version":3,"sources":["/Users/bmarshall/react-library/src/components/Toast/Toast.jsx"],"names":["React","PropTypes","Icon","styles","classnames","Toast","className","type","children","title","onClose","onHover","onBlur","toastClassName","toast","default","icon","close","propTypes","node","string","func","defaultProps","isOpen"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,KAA7B;AAAoCC,EAAAA,OAApC;AAA6CC,EAAAA,OAA7C;AAAsDC,EAAAA;AAAtD,CAAf,EAA+E;AAC1F,QAAMC,cAAc,GAAGT,UAAU,CAACD,MAAM,CAACW,KAAR,EAAe;AAC5C,KAACX,MAAM,CAACY,OAAR,GAAkB,CAACR,IADyB;AAE5C,KAACD,SAAD,GAAaA;AAF+B,GAAf,CAAjC;AAKA,SACI;AAAK,IAAA,SAAS,EAAEO,cAAhB;AAAgC,kBAAY,IAA5C;AAAkD,IAAA,YAAY,EAAEF,OAAhE;AAAyE,IAAA,YAAY,EAAEC,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,IAAI,GAAG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAEA,IAAzB;AAA+B,IAAA,SAAS,EAAEJ,MAAM,CAACa,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA+D,IADxE,EAEI;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACK,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,QAAQ,IAAIC,KAA9C,CAFJ,EAGI;AAAQ,IAAA,SAAS,EAAEN,MAAM,CAACc,KAA1B;AAAiC,kBAAY,IAA7C;AAAmD,IAAA,OAAO,EAAEP,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,CADJ;AASH;AAEDL,KAAK,CAACa,SAAN,GAAkB;AACdV,EAAAA,QAAQ,EAAEP,SAAS,CAACkB,IADN;AAEdV,EAAAA,KAAK,EAAER,SAAS,CAACmB,MAFH;AAGdd,EAAAA,SAAS,EAAEL,SAAS,CAACmB,MAHP;AAIdR,EAAAA,MAAM,EAAEX,SAAS,CAACoB,IAJJ;AAKdV,EAAAA,OAAO,EAAEV,SAAS,CAACoB,IALL;AAMdX,EAAAA,OAAO,EAAET,SAAS,CAACoB,IANL;AAOdd,EAAAA,IAAI,EAAEN,SAAS,CAACmB,MAPF,CAOS;;AAPT,CAAlB;AAUAf,KAAK,CAACiB,YAAN,GAAqB;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '../';\nimport styles from './Toast.module.scss';\nimport classnames from 'classnames';\n\nexport default function Toast({ className, type, children, title, onClose, onHover, onBlur }) {\n    const toastClassName = classnames(styles.toast, {\n        [styles.default]: !type,\n        [className]: className\n    });\n\n    return (\n        <div className={toastClassName} data-toast={true} onMouseEnter={onHover} onMouseLeave={onBlur}>\n            {type ? <Icon width=\"44px\" name={type} className={styles.icon} /> : null}\n            <div className={styles.children}>{children || title}</div>\n            <button className={styles.close} data-close={true} onClick={onClose}>\n                <Icon width=\"12px\" name=\"close\" className=\"icon\" />\n            </button>\n        </div>\n    );\n}\n\nToast.propTypes = {\n    children: PropTypes.node,\n    title: PropTypes.string,\n    className: PropTypes.string,\n    onBlur: PropTypes.func,\n    onHover: PropTypes.func,\n    onClose: PropTypes.func,\n    type: PropTypes.string // success, info, warning, error, undefined\n};\n\nToast.defaultProps = {\n    isOpen: true\n};\n"]},"metadata":{},"sourceType":"module"}