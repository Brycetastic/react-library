{"ast":null,"code":"var _jsxFileName = \"/Users/bmarshall/react-library/src/components/CheckBox/CheckBox.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '../';\nimport styles from './CheckBox.module.scss';\nimport classnames from 'classnames';\n\nconst BoxWrapper = props => {\n  const {\n    on,\n    light,\n    className,\n    onToggle,\n    semi,\n    disabled,\n    onClick,\n    ...other\n  } = props;\n  const btnClassName = classnames(className, styles['toggle-btn'], {\n    [styles['toggle-btn-on']]: on,\n    [styles.light]: light,\n    [styles.disabled]: disabled,\n    [className]: className\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    onChange: () => {// when change happens\n    }\n  }, other, {\n    className: styles['toggle-input'],\n    type: \"checkbox\",\n    checked: on,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: btnClassName,\n    onClick: e => onToggle(e),\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, on ? React.createElement(Check, {\n    semi: semi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }) : null));\n};\n\nconst Check = ({\n  semi\n}) => semi ? '–' : React.createElement(Icon, {\n  name: \"check\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n});\n\nBoxWrapper.propTypes = {\n  on: PropTypes.bool,\n  semi: PropTypes.bool,\n  light: PropTypes.bool,\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  className: PropTypes.string,\n  onToggle: PropTypes.func,\n  onClick: PropTypes.func\n};\nexport default class CheckBox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      on: this.props.on\n    };\n\n    this.toggle = e => {\n      e.stopPropagation();\n      this.setState(({\n        on\n      }) => {\n        if (this.props.onClick) {\n          this.props.onClick(!on);\n        }\n\n        return {\n          on: !on\n        };\n      });\n    };\n  }\n\n  render() {\n    const on = this.props.on === undefined ? this.state.on : this.props.on;\n    return React.createElement(BoxWrapper, Object.assign({}, this.props, {\n      on: on,\n      onToggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}\nCheckBox.propTypes = {\n  on: PropTypes.bool,\n  onClick: PropTypes.func\n};","map":{"version":3,"sources":["/Users/bmarshall/react-library/src/components/CheckBox/CheckBox.jsx"],"names":["React","Component","PropTypes","Icon","styles","classnames","BoxWrapper","props","on","light","className","onToggle","semi","disabled","onClick","other","btnClassName","e","Check","propTypes","bool","name","oneOfType","string","number","func","CheckBox","state","toggle","stopPropagation","setState","render","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '../';\nimport styles from './CheckBox.module.scss';\nimport classnames from 'classnames';\n\nconst BoxWrapper = props => {\n    const {\n        on,\n        light,\n        className,\n        onToggle,\n        semi,\n        disabled,\n        onClick,\n        ...other\n    } = props;\n    const btnClassName = classnames(className, styles['toggle-btn'], {\n        [styles['toggle-btn-on']]: on,\n        [styles.light]: light,\n        [styles.disabled]: disabled,\n        [className]: className\n    });\n\n    return (\n        <div>\n            <input\n                onChange={() => {\n                    // when change happens\n                }}\n                {...other}\n                className={styles['toggle-input']}\n                type=\"checkbox\"\n                checked={on}\n                disabled={disabled}\n            />\n            <button\n                type=\"button\"\n                className={btnClassName}\n                onClick={e => onToggle(e)}\n                disabled={disabled}\n            >\n                {on ? <Check semi={semi} /> : null}\n            </button>\n        </div>\n    );\n};\n\nconst Check = ({ semi }) => (semi ? '–' : <Icon name=\"check\" />);\n\nBoxWrapper.propTypes = {\n    on: PropTypes.bool,\n    semi: PropTypes.bool,\n    light: PropTypes.bool,\n    name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    className: PropTypes.string,\n    onToggle: PropTypes.func,\n    onClick: PropTypes.func\n};\n\nexport default class CheckBox extends Component {\n    static propTypes = {\n        on: PropTypes.bool,\n        onClick: PropTypes.func\n    };\n\n    state = { on: this.props.on };\n\n    toggle = e => {\n        e.stopPropagation();\n        this.setState(({ on }) => {\n            if (this.props.onClick) {\n                this.props.onClick(!on);\n            }\n            return { on: !on };\n        });\n    };\n\n    render() {\n        const on = this.props.on === undefined ? this.state.on : this.props.on;\n        return <BoxWrapper {...this.props} on={on} onToggle={this.toggle} />;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}