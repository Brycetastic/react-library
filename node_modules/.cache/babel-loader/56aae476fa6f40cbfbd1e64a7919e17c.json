{"ast":null,"code":"/**\n * Eval example code in a custom context:\n * - `require()` that allows you to require modules from Markdown examples\n *   (won’t work dinamically becasue we need to know all required modules in\n *   advance to be able to bundle them with the code).\n * - `state` variable, `setState` function that will be binded to a React\n *   component that manages example’s state on the frontend.\n *\n * Also prepends a given `code` with a `header` (maps required context modules\n * to local variables: React, current component and modules defined via the\n * `context` config option).\n */\nexport default function evalInContext(header, require, code) {\n  // 1. Prepend code with the header\n  // 2. Wrap code in a block (`{}`) to create a new scope, so you could\n  //    explicitly import context modules in your examples)\n  var body = header + \"\\n{\" + code + \"}\"; // eslint-disable-next-line no-new-func\n\n  var func = new Function('require', 'state', 'setState', body); // Bind the `require` function, other context arguments will be passed from\n  // the frontend\n  // $FlowFixMe\n\n  return func.bind(null, require);\n}","map":{"version":3,"sources":["/Users/bmarshall/react-library/node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js"],"names":["evalInContext","header","require","code","body","func","Function","bind"],"mappings":"AAAA;;;;;;;;;;;;AAYA,eAAe,SAASA,aAAT,CAAuBC,MAAvB,EAA+BC,OAA/B,EAAwCC,IAAxC,EAA8C;AAC3D;AACA;AACA;AACA,MAAIC,IAAI,GAAGH,MAAM,GAAG,KAAT,GAAiBE,IAAjB,GAAwB,GAAnC,CAJ2D,CAInB;;AAExC,MAAIE,IAAI,GAAG,IAAIC,QAAJ,CAAa,SAAb,EAAwB,OAAxB,EAAiC,UAAjC,EAA6CF,IAA7C,CAAX,CAN2D,CAMI;AAC/D;AACA;;AAEA,SAAOC,IAAI,CAACE,IAAL,CAAU,IAAV,EAAgBL,OAAhB,CAAP;AACD","sourcesContent":["/**\n * Eval example code in a custom context:\n * - `require()` that allows you to require modules from Markdown examples\n *   (won’t work dinamically becasue we need to know all required modules in\n *   advance to be able to bundle them with the code).\n * - `state` variable, `setState` function that will be binded to a React\n *   component that manages example’s state on the frontend.\n *\n * Also prepends a given `code` with a `header` (maps required context modules\n * to local variables: React, current component and modules defined via the\n * `context` config option).\n */\nexport default function evalInContext(header, require, code) {\n  // 1. Prepend code with the header\n  // 2. Wrap code in a block (`{}`) to create a new scope, so you could\n  //    explicitly import context modules in your examples)\n  var body = header + \"\\n{\" + code + \"}\"; // eslint-disable-next-line no-new-func\n\n  var func = new Function('require', 'state', 'setState', body); // Bind the `require` function, other context arguments will be passed from\n  // the frontend\n  // $FlowFixMe\n\n  return func.bind(null, require);\n}"]},"metadata":{},"sourceType":"module"}