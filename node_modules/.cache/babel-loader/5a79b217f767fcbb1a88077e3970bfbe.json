{"ast":null,"code":"var _jsxFileName = \"/Users/bmarshall/react-library/src/components/Input/InputWrapper.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './Input.module.scss';\n\nconst InputWrapper = props => {\n  const inputModifiers = classnames(styles.inputWrapper, styles[props.iconPosition], {\n    [styles.success]: props.success,\n    [styles.error]: props.error,\n    [styles.warning]: props.warning,\n    [props.className]: props.className\n  });\n  return React.createElement(\"div\", {\n    name: props.name,\n    className: inputModifiers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.children, props.failureMessage && (props.warning || props.error) && React.createElement(\"span\", {\n    className: styles.failureMessage,\n    \"data-warning\": props.warning,\n    \"data-error\": props.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.failureMessage));\n};\n\nInputWrapper.propTypes = {\n  className: PropTypes.string,\n\n  /**\n   * Styles box when input has status\n   */\n  success: PropTypes.bool,\n  error: PropTypes.bool,\n  warning: PropTypes.bool,\n\n  /**\n   * Message to be displayed on warning and error states\n   */\n  failureMessage: PropTypes.string\n};\nexport default InputWrapper;","map":{"version":3,"sources":["/Users/bmarshall/react-library/src/components/Input/InputWrapper.jsx"],"names":["React","PropTypes","classnames","styles","InputWrapper","props","inputModifiers","inputWrapper","iconPosition","success","error","warning","className","name","children","failureMessage","propTypes","string","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,cAAc,GAAGJ,UAAU,CAACC,MAAM,CAACI,YAAR,EAAsBJ,MAAM,CAACE,KAAK,CAACG,YAAP,CAA5B,EAAkD;AAC/E,KAACL,MAAM,CAACM,OAAR,GAAkBJ,KAAK,CAACI,OADuD;AAE/E,KAACN,MAAM,CAACO,KAAR,GAAgBL,KAAK,CAACK,KAFyD;AAG/E,KAACP,MAAM,CAACQ,OAAR,GAAkBN,KAAK,CAACM,OAHuD;AAI/E,KAACN,KAAK,CAACO,SAAP,GAAmBP,KAAK,CAACO;AAJsD,GAAlD,CAAjC;AAOA,SACI;AAAK,IAAA,IAAI,EAAEP,KAAK,CAACQ,IAAjB;AAAuB,IAAA,SAAS,EAAEP,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACS,QADX,EAGKT,KAAK,CAACU,cAAN,KAAyBV,KAAK,CAACM,OAAN,IAAiBN,KAAK,CAACK,KAAhD,KACG;AAAM,IAAA,SAAS,EAAEP,MAAM,CAACY,cAAxB;AAAwC,oBAAcV,KAAK,CAACM,OAA5D;AAAqE,kBAAYN,KAAK,CAACK,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,KAAK,CAACU,cADX,CAJR,CADJ;AAWH,CAnBD;;AAqBAX,YAAY,CAACY,SAAb,GAAyB;AACrBJ,EAAAA,SAAS,EAAEX,SAAS,CAACgB,MADA;;AAErB;;;AAGAR,EAAAA,OAAO,EAAER,SAAS,CAACiB,IALE;AAMrBR,EAAAA,KAAK,EAAET,SAAS,CAACiB,IANI;AAOrBP,EAAAA,OAAO,EAAEV,SAAS,CAACiB,IAPE;;AAQrB;;;AAGAH,EAAAA,cAAc,EAAEd,SAAS,CAACgB;AAXL,CAAzB;AAcA,eAAeb,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './Input.module.scss';\n\nconst InputWrapper = props => {\n    const inputModifiers = classnames(styles.inputWrapper, styles[props.iconPosition], {\n        [styles.success]: props.success,\n        [styles.error]: props.error,\n        [styles.warning]: props.warning,\n        [props.className]: props.className\n    });\n\n    return (\n        <div name={props.name} className={inputModifiers}>\n            {props.children}\n\n            {props.failureMessage && (props.warning || props.error) && (\n                <span className={styles.failureMessage} data-warning={props.warning} data-error={props.error}>\n                    {props.failureMessage}\n                </span>\n            )}\n        </div>\n    );\n};\n\nInputWrapper.propTypes = {\n    className: PropTypes.string,\n    /**\n     * Styles box when input has status\n     */\n    success: PropTypes.bool,\n    error: PropTypes.bool,\n    warning: PropTypes.bool,\n    /**\n     * Message to be displayed on warning and error states\n     */\n    failureMessage: PropTypes.string\n};\n\nexport default InputWrapper;\n"]},"metadata":{},"sourceType":"module"}