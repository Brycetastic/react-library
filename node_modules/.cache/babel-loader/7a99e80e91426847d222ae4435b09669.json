{"ast":null,"code":"var _jsxFileName = \"/Users/bmarshall/react-library/src/components/DropDown/CheckBoxSelection.jsx\";\nimport React, { Component } from 'react';\nimport DropdownArrow from './DropdownArrow'; // import Select, { components } from 'react-select';\n\nimport classnames from 'classnames';\nimport styles from './DropDown.module.scss';\nimport { Button, Switch } from '../';\nexport default class CheckBoxSelection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: false\n    };\n\n    this.onClickControl = () => {\n      this.setState({\n        show: !this.state.show\n      });\n    };\n\n    this.closeMenu = ev => {\n      ev.stopPropagation();\n\n      if (!ev.target.getAttribute('data-dropdown')) {\n        this.setState({\n          show: false\n        });\n      }\n    };\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (prevState.show !== this.state.show) {\n      if (this.state.show) {\n        document.addEventListener('click', this.closeMenu, false);\n      } else {\n        document.removeEventListener('click', this.closeMenu, false);\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: classnames(styles.checkWrapper, {\n        [this.props.className]: this.props.className\n      }),\n      \"data-dropdown\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onClickControl,\n      className: styles.checkControl,\n      \"data-dropdown\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: styles.checkLabel,\n      \"data-dropdown\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.label || 'Select...'), React.createElement(DropdownArrow, {\n      \"data-dropdown\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: classnames(styles.checkMenu, {\n        [styles.show]: this.state.show\n      }),\n      \"data-dropdown\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.props.options.map(item => {\n      return React.createElement(\"li\", {\n        key: `dropdown-${item.value}`,\n        onClick: () => this.props.clickOption(item.value),\n        \"data-dropdown\": true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        control: true,\n        on: item.isSelected,\n        small: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        \"data-dropdown\": true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, item.label));\n    }), React.createElement(\"li\", {\n      className: styles.checkButtons,\n      \"data-dropdown\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Button, {\n      title: this.props.selectAll || 'Select All',\n      btnStyle: \"tertiary\",\n      btnSize: \"medium\",\n      onClick: () => this.props.clickAll(true),\n      \"data-dropdown\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Button, {\n      title: this.props.removeAll || 'Remove All',\n      btnStyle: \"tertiary\",\n      btnSize: \"medium\",\n      onClick: () => this.props.clickAll(false),\n      \"data-dropdown\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/bmarshall/react-library/src/components/DropDown/CheckBoxSelection.jsx"],"names":["React","Component","DropdownArrow","classnames","styles","Button","Switch","CheckBoxSelection","state","show","onClickControl","setState","closeMenu","ev","stopPropagation","target","getAttribute","componentDidUpdate","_","prevState","document","addEventListener","removeEventListener","render","checkWrapper","props","className","checkControl","checkLabel","label","checkMenu","options","map","item","value","clickOption","isSelected","checkButtons","selectAll","clickAll","removeAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DropdownArrow from './DropdownArrow';\n// import Select, { components } from 'react-select';\nimport classnames from 'classnames';\nimport styles from './DropDown.module.scss';\nimport { Button, Switch } from '../';\n\nexport default class CheckBoxSelection extends Component {\n    state = {\n        show: false\n    };\n\n    componentDidUpdate(_, prevState) {\n        if (prevState.show !== this.state.show) {\n            if (this.state.show) {\n                document.addEventListener('click', this.closeMenu, false);\n            } else {\n                document.removeEventListener('click', this.closeMenu, false);\n            }\n        }\n    }\n\n    onClickControl = () => {\n        this.setState({\n            show: !this.state.show\n        });\n    };\n\n    closeMenu = ev => {\n        ev.stopPropagation();\n        if (!ev.target.getAttribute('data-dropdown')) {\n            this.setState({\n                show: false\n            });\n        }\n    };\n\n    render() {\n        return (\n            <section\n                className={classnames(styles.checkWrapper, { [this.props.className]: this.props.className })}\n                data-dropdown={true}\n            >\n                <button onClick={this.onClickControl} className={styles.checkControl} data-dropdown={true}>\n                    <p className={styles.checkLabel} data-dropdown={true}>\n                        {this.props.label || 'Select...'}\n                    </p>\n                    <DropdownArrow data-dropdown={true} />\n                </button>\n                <ul\n                    className={classnames(styles.checkMenu, { [styles.show]: this.state.show })}\n                    data-dropdown={true}\n                >\n                    {this.props.options.map(item => {\n                        return (\n                            <li\n                                key={`dropdown-${item.value}`}\n                                onClick={() => this.props.clickOption(item.value)}\n                                data-dropdown={true}\n                            >\n                                <Switch control on={item.isSelected} small />\n                                <label data-dropdown={true}>{item.label}</label>\n                            </li>\n                        );\n                    })}\n                    <li className={styles.checkButtons} data-dropdown={true}>\n                        <Button\n                            title={this.props.selectAll || 'Select All'}\n                            btnStyle=\"tertiary\"\n                            btnSize=\"medium\"\n                            onClick={() => this.props.clickAll(true)}\n                            data-dropdown={true}\n                        />\n                        <Button\n                            title={this.props.removeAll || 'Remove All'}\n                            btnStyle=\"tertiary\"\n                            btnSize=\"medium\"\n                            onClick={() => this.props.clickAll(false)}\n                            data-dropdown={true}\n                        />\n                    </li>\n                </ul>\n            </section>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}