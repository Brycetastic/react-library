{"ast":null,"code":"import React from 'react';\nimport hashSum from 'hash-sum';\nimport slots from 'rsg-components/slots';\nimport StyleGuide from 'rsg-components/StyleGuide';\nimport getPageTitle from './getPageTitle';\nimport getRouteData from './getRouteData';\nimport processSections from './processSections';\n/**\n * @param {object} styleguide An object returned by styleguide-loader\n * @param {number} codeRevision\n * @param {Location} [loc]\n * @param {Document} [doc]\n * @param {History} [hist]\n * @return {React.ReactElement}\n */\n\nexport default function renderStyleguide(styleguide, codeRevision, loc, doc, hist) {\n  if (loc === void 0) {\n    loc = window.location;\n  }\n\n  if (doc === void 0) {\n    doc = document;\n  }\n\n  if (hist === void 0) {\n    hist = window.history;\n  }\n\n  var allSections = processSections(styleguide.sections);\n  var _styleguide$config = styleguide.config,\n      title = _styleguide$config.title,\n      pagePerSection = _styleguide$config.pagePerSection,\n      theme = _styleguide$config.theme,\n      styles = _styleguide$config.styles;\n\n  var _getRouteData = getRouteData(allSections, loc.hash, pagePerSection),\n      sections = _getRouteData.sections,\n      displayMode = _getRouteData.displayMode; // Update page title\n\n\n  doc.title = getPageTitle(sections, title, displayMode); // If the current hash location was set to just `/` (e.g. when navigating back from isolated view to overview)\n  // replace the URL with one without hash, to present the user with a single address of the overview screen\n\n  if (loc.hash === '#/') {\n    var _url = loc.pathname + loc.search;\n\n    hist.replaceState('', doc.title, _url);\n  }\n\n  return React.createElement(StyleGuide, {\n    codeRevision: codeRevision // only caclulate css revisions in dev when hot is on to avoid\n    // stringifying the styles in production\n    ,\n    cssRevision: module.hot ? hashSum({\n      theme: theme,\n      styles: styles\n    }) : '0',\n    config: styleguide.config,\n    slots: slots(styleguide.config),\n    welcomeScreen: styleguide.welcomeScreen,\n    patterns: styleguide.patterns,\n    sections: sections,\n    allSections: allSections,\n    displayMode: displayMode,\n    pagePerSection: pagePerSection\n  });\n}","map":{"version":3,"sources":["/Users/bmarshall/react-library/node_modules/react-styleguidist/lib/client/utils/renderStyleguide.js"],"names":["React","hashSum","slots","StyleGuide","getPageTitle","getRouteData","processSections","renderStyleguide","styleguide","codeRevision","loc","doc","hist","window","location","document","history","allSections","sections","_styleguide$config","config","title","pagePerSection","theme","styles","_getRouteData","hash","displayMode","_url","pathname","search","replaceState","createElement","cssRevision","module","hot","welcomeScreen","patterns"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA;;;;;;;;;AAQA,eAAe,SAASC,gBAAT,CAA0BC,UAA1B,EAAsCC,YAAtC,EAAoDC,GAApD,EAAyDC,GAAzD,EAA8DC,IAA9D,EAAoE;AACjF,MAAIF,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAClBA,IAAAA,GAAG,GAAGG,MAAM,CAACC,QAAb;AACD;;AAED,MAAIH,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAClBA,IAAAA,GAAG,GAAGI,QAAN;AACD;;AAED,MAAIH,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnBA,IAAAA,IAAI,GAAGC,MAAM,CAACG,OAAd;AACD;;AAED,MAAIC,WAAW,GAAGX,eAAe,CAACE,UAAU,CAACU,QAAZ,CAAjC;AACA,MAAIC,kBAAkB,GAAGX,UAAU,CAACY,MAApC;AAAA,MACIC,KAAK,GAAGF,kBAAkB,CAACE,KAD/B;AAAA,MAEIC,cAAc,GAAGH,kBAAkB,CAACG,cAFxC;AAAA,MAGIC,KAAK,GAAGJ,kBAAkB,CAACI,KAH/B;AAAA,MAIIC,MAAM,GAAGL,kBAAkB,CAACK,MAJhC;;AAMA,MAAIC,aAAa,GAAGpB,YAAY,CAACY,WAAD,EAAcP,GAAG,CAACgB,IAAlB,EAAwBJ,cAAxB,CAAhC;AAAA,MACIJ,QAAQ,GAAGO,aAAa,CAACP,QAD7B;AAAA,MAEIS,WAAW,GAAGF,aAAa,CAACE,WAFhC,CApBiF,CAsBpC;;;AAG7ChB,EAAAA,GAAG,CAACU,KAAJ,GAAYjB,YAAY,CAACc,QAAD,EAAWG,KAAX,EAAkBM,WAAlB,CAAxB,CAzBiF,CAyBzB;AACxD;;AAEA,MAAIjB,GAAG,CAACgB,IAAJ,KAAa,IAAjB,EAAuB;AACrB,QAAIE,IAAI,GAAGlB,GAAG,CAACmB,QAAJ,GAAenB,GAAG,CAACoB,MAA9B;;AAEAlB,IAAAA,IAAI,CAACmB,YAAL,CAAkB,EAAlB,EAAsBpB,GAAG,CAACU,KAA1B,EAAiCO,IAAjC;AACD;;AAED,SAAO5B,KAAK,CAACgC,aAAN,CAAoB7B,UAApB,EAAgC;AACrCM,IAAAA,YAAY,EAAEA,YADuB,CACV;AAC3B;AAFqC;AAIrCwB,IAAAA,WAAW,EAAEC,MAAM,CAACC,GAAP,GAAalC,OAAO,CAAC;AAChCsB,MAAAA,KAAK,EAAEA,KADyB;AAEhCC,MAAAA,MAAM,EAAEA;AAFwB,KAAD,CAApB,GAGR,GAPgC;AAQrCJ,IAAAA,MAAM,EAAEZ,UAAU,CAACY,MARkB;AASrClB,IAAAA,KAAK,EAAEA,KAAK,CAACM,UAAU,CAACY,MAAZ,CATyB;AAUrCgB,IAAAA,aAAa,EAAE5B,UAAU,CAAC4B,aAVW;AAWrCC,IAAAA,QAAQ,EAAE7B,UAAU,CAAC6B,QAXgB;AAYrCnB,IAAAA,QAAQ,EAAEA,QAZ2B;AAarCD,IAAAA,WAAW,EAAEA,WAbwB;AAcrCU,IAAAA,WAAW,EAAEA,WAdwB;AAerCL,IAAAA,cAAc,EAAEA;AAfqB,GAAhC,CAAP;AAiBD","sourcesContent":["import \"core-js/modules/es.string.search\";\nimport React from 'react';\nimport hashSum from 'hash-sum';\nimport slots from 'rsg-components/slots';\nimport StyleGuide from 'rsg-components/StyleGuide';\nimport getPageTitle from './getPageTitle';\nimport getRouteData from './getRouteData';\nimport processSections from './processSections';\n\n/**\n * @param {object} styleguide An object returned by styleguide-loader\n * @param {number} codeRevision\n * @param {Location} [loc]\n * @param {Document} [doc]\n * @param {History} [hist]\n * @return {React.ReactElement}\n */\nexport default function renderStyleguide(styleguide, codeRevision, loc, doc, hist) {\n  if (loc === void 0) {\n    loc = window.location;\n  }\n\n  if (doc === void 0) {\n    doc = document;\n  }\n\n  if (hist === void 0) {\n    hist = window.history;\n  }\n\n  var allSections = processSections(styleguide.sections);\n  var _styleguide$config = styleguide.config,\n      title = _styleguide$config.title,\n      pagePerSection = _styleguide$config.pagePerSection,\n      theme = _styleguide$config.theme,\n      styles = _styleguide$config.styles;\n\n  var _getRouteData = getRouteData(allSections, loc.hash, pagePerSection),\n      sections = _getRouteData.sections,\n      displayMode = _getRouteData.displayMode; // Update page title\n\n\n  doc.title = getPageTitle(sections, title, displayMode); // If the current hash location was set to just `/` (e.g. when navigating back from isolated view to overview)\n  // replace the URL with one without hash, to present the user with a single address of the overview screen\n\n  if (loc.hash === '#/') {\n    var _url = loc.pathname + loc.search;\n\n    hist.replaceState('', doc.title, _url);\n  }\n\n  return React.createElement(StyleGuide, {\n    codeRevision: codeRevision // only caclulate css revisions in dev when hot is on to avoid\n    // stringifying the styles in production\n    ,\n    cssRevision: module.hot ? hashSum({\n      theme: theme,\n      styles: styles\n    }) : '0',\n    config: styleguide.config,\n    slots: slots(styleguide.config),\n    welcomeScreen: styleguide.welcomeScreen,\n    patterns: styleguide.patterns,\n    sections: sections,\n    allSections: allSections,\n    displayMode: displayMode,\n    pagePerSection: pagePerSection\n  });\n}"]},"metadata":{},"sourceType":"module"}