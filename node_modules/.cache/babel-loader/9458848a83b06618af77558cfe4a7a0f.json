{"ast":null,"code":"var _jsxFileName = \"/Users/bmarshall/react-library/src/components/Accordion/Accordion.jsx\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events,jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './Accordion.module.scss';\nimport { Icon } from '../';\n\nclass Accordion extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      active: props.active\n    };\n    this.childRef = React.createRef();\n    this.toggle = this.toggle.bind(this);\n  }\n\n  componentDidMount() {\n    const childHeight = this.childRef.current.getBoundingClientRect().height;\n    this.setState({\n      childHeight,\n      childStyle: {\n        height: this.state.active ? childHeight : 0\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const childHeight = this.childRef.current.getBoundingClientRect().height;\n\n    if (childHeight !== this.state.childHeight) {\n      this.setState({\n        childHeight,\n        childStyle: {\n          height: this.state.active ? childHeight : 0\n        }\n      });\n    }\n\n    if (prevProps.active !== this.props.active) {\n      this.setState({\n        active: this.props.active,\n        childStyle: {\n          height: this.props.active ? childHeight : 0\n        }\n      });\n    }\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      active: !prevState.active,\n      childStyle: {\n        height: prevState.active ? 0 : this.state.childHeight\n      }\n    }));\n  }\n\n  render() {\n    const sectionStyle = classnames(styles.wrapper, this.props.className, {\n      [this.props.activeClass]: this.state.active,\n      [styles.activeWrapper]: this.state.active,\n      [styles.secondary]: this.props.accStyle === 'secondary'\n    });\n    const childClass = classnames(styles.childClass, {\n      [styles.active]: this.state.active,\n      [styles.inactive]: !this.state.active\n    });\n    return React.createElement(\"section\", {\n      className: sectionStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: styles.title,\n      onClick: this.props.onClick || this.toggle,\n      role: \"button\",\n      tabIndex: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.props.title, React.createElement(Icon, {\n      name: \"chevronDown\",\n      className: this.state.active ? styles.arrowUp : styles.arrowDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: childClass,\n      style: this.state.childStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.childRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.props.children)));\n  }\n\n}\n\nAccordion.defaultProps = {\n  active: false\n};\nAccordion.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n\n  /** Anything can go inside this accordion container */\n  children: PropTypes.node,\n  className: PropTypes.string,\n  activeClass: PropTypes.string,\n  active: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default Accordion;","map":{"version":3,"sources":["/Users/bmarshall/react-library/src/components/Accordion/Accordion.jsx"],"names":["React","PropTypes","classnames","styles","Icon","Accordion","Component","constructor","props","state","active","childRef","createRef","toggle","bind","componentDidMount","childHeight","current","getBoundingClientRect","height","setState","childStyle","componentDidUpdate","prevProps","prevState","render","sectionStyle","wrapper","className","activeClass","activeWrapper","secondary","accStyle","childClass","inactive","title","onClick","arrowUp","arrowDown","children","defaultProps","propTypes","oneOfType","string","element","isRequired","node","bool","func"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events,jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './Accordion.module.scss';\nimport { Icon } from '../';\n\nclass Accordion extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            active: props.active\n        };\n\n        this.childRef = React.createRef();\n        this.toggle = this.toggle.bind(this);\n    }\n\n    componentDidMount() {\n        const childHeight = this.childRef.current.getBoundingClientRect().height;\n        this.setState({\n            childHeight,\n            childStyle: {\n                height: this.state.active ? childHeight : 0\n            }\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        const childHeight = this.childRef.current.getBoundingClientRect().height;\n        if (childHeight !== this.state.childHeight) {\n            this.setState({\n                childHeight,\n                childStyle: {\n                    height: this.state.active ? childHeight : 0\n                }\n            });\n        }\n        if (prevProps.active !== this.props.active) {\n            this.setState({\n                active: this.props.active,\n                childStyle: {\n                    height: this.props.active ? childHeight : 0\n                }\n            });\n        }\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            active: !prevState.active,\n            childStyle: {\n                height: prevState.active ? 0 : this.state.childHeight\n            }\n        }));\n    }\n\n    render() {\n        const sectionStyle = classnames(styles.wrapper, this.props.className, {\n            [this.props.activeClass]: this.state.active,\n            [styles.activeWrapper]: this.state.active,\n            [styles.secondary]: this.props.accStyle === 'secondary'\n        });\n        const childClass = classnames(styles.childClass, {\n            [styles.active]: this.state.active,\n            [styles.inactive]: !this.state.active\n        });\n\n        return (\n            <section className={sectionStyle}>\n                <a\n                    className={styles.title}\n                    onClick={this.props.onClick || this.toggle}\n                    role=\"button\"\n                    tabIndex={0}\n                >\n                    {this.props.title}\n                    <Icon\n                        name=\"chevronDown\"\n                        className={this.state.active ? styles.arrowUp : styles.arrowDown}\n                    />\n                </a>\n                <div className={childClass} style={this.state.childStyle}>\n                    <div ref={this.childRef}>{this.props.children}</div>\n                </div>\n            </section>\n        );\n    }\n}\n\nAccordion.defaultProps = {\n    active: false\n};\n\nAccordion.propTypes = {\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n    /** Anything can go inside this accordion container */\n    children: PropTypes.node,\n    className: PropTypes.string,\n    activeClass: PropTypes.string,\n    active: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}