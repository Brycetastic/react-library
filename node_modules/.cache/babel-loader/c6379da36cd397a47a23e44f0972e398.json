{"ast":null,"code":"var _jsxFileName = \"/Users/bmarshall/react-library/src/components/Timeline/Timeline.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Icon, ToolTip } from '../';\nimport styles from './Timeline.module.scss';\nexport default class Timeline extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      completedIndex: 0\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      stepIndex\n    } = this.props;\n\n    if (prevProps.stepIndex !== stepIndex && prevState.completedIndex < stepIndex) {\n      this.setState({\n        completedIndex: stepIndex\n      });\n    }\n  }\n\n  render() {\n    const {\n      stepIndex,\n      isLoading,\n      changeStepIndex,\n      titles,\n      locked,\n      disableStep\n    } = this.props;\n    return React.createElement(\"ul\", {\n      className: styles.timeline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, titles.map((title, index) => {\n      const isDisabled = index === stepIndex || isLoading || disableStep === index || locked && this.state.completedIndex < index;\n      return React.createElement(\"li\", {\n        key: title,\n        className: classnames({\n          [styles.disabled]: isLoading,\n          [styles.lockProgression]: locked,\n          [styles.locked]: locked && index > this.state.completedIndex,\n          [styles.unlockedNext]: locked && index < this.state.completedIndex,\n          [styles.stepDisabled]: disableStep === index,\n          [styles.active]: index === stepIndex\n        }),\n        onClick: () => {\n          if (!isDisabled) {\n            changeStepIndex(index, 'timeline');\n          }\n        },\n        style: {\n          width: `${100 / titles.length}%`\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props[`tip${index}`] && isDisabled ? React.createElement(WithToolTip, Object.assign({}, this.props, this.state, {\n        index: index,\n        tip: this.props[`tip${index}`],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })) : React.createElement(Oval, Object.assign({}, this.props, this.state, {\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, title));\n    }));\n  }\n\n}\n\nconst WithToolTip = ({\n  tip,\n  ...other\n}) => {\n  return React.createElement(ToolTip, {\n    alignment: ['top', 'center'],\n    tip: tip,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Oval, Object.assign({}, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })));\n};\n\nconst Oval = ({\n  locked,\n  index,\n  stepIndex,\n  completedIndex\n}) => {\n  const showCheck = locked && index < completedIndex && stepIndex !== index;\n  return React.createElement(\"div\", {\n    className: styles.oval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, showCheck ? React.createElement(Icon, {\n    name: \"check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }) : index + 1);\n};\n\nTimeline.propTypes = {\n  stepIndex: PropTypes.number.isRequired,\n  changeStepIndex: PropTypes.func,\n  isLoading: PropTypes.bool,\n  locked: PropTypes.bool,\n  titles: PropTypes.arrayOf(PropTypes.string)\n};\nTimeline.defaultProps = {\n  stepIndex: 0,\n  locked: true\n};","map":{"version":3,"sources":["/Users/bmarshall/react-library/src/components/Timeline/Timeline.jsx"],"names":["React","Component","PropTypes","classnames","Icon","ToolTip","styles","Timeline","state","completedIndex","componentDidUpdate","prevProps","prevState","stepIndex","props","setState","render","isLoading","changeStepIndex","titles","locked","disableStep","timeline","map","title","index","isDisabled","disabled","lockProgression","unlockedNext","stepDisabled","active","width","length","WithToolTip","tip","other","Oval","showCheck","oval","propTypes","number","isRequired","func","bool","arrayOf","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Icon, ToolTip } from '../';\nimport styles from './Timeline.module.scss';\n\nexport default class Timeline extends Component {\n    state = {\n        completedIndex: 0\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        const { stepIndex } = this.props;\n\n        if (prevProps.stepIndex !== stepIndex && prevState.completedIndex < stepIndex) {\n            this.setState({\n                completedIndex: stepIndex\n            });\n        }\n    }\n\n    render() {\n        const { stepIndex, isLoading, changeStepIndex, titles, locked, disableStep } = this.props;\n\n        return (\n            <ul className={styles.timeline}>\n                {titles.map((title, index) => {\n                    const isDisabled =\n                        index === stepIndex ||\n                        isLoading ||\n                        disableStep === index ||\n                        (locked && this.state.completedIndex < index);\n                    return (\n                        <li\n                            key={title}\n                            className={classnames({\n                                [styles.disabled]: isLoading,\n                                [styles.lockProgression]: locked,\n                                [styles.locked]: locked && index > this.state.completedIndex,\n                                [styles.unlockedNext]: locked && index < this.state.completedIndex,\n                                [styles.stepDisabled]: disableStep === index,\n                                [styles.active]: index === stepIndex\n                            })}\n                            onClick={() => {\n                                if (!isDisabled) {\n                                    changeStepIndex(index, 'timeline');\n                                }\n                            }}\n                            style={{ width: `${100 / titles.length}%` }}\n                        >\n                            {this.props[`tip${index}`] && isDisabled ? (\n                                <WithToolTip\n                                    {...this.props}\n                                    {...this.state}\n                                    index={index}\n                                    tip={this.props[`tip${index}`]}\n                                />\n                            ) : (\n                                <Oval {...this.props} {...this.state} index={index} />\n                            )}\n                            <span>{title}</span>\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nconst WithToolTip = ({ tip, ...other }) => {\n    return (\n        <ToolTip alignment={['top', 'center']} tip={tip} color=\"black\">\n            <Oval {...other} />\n        </ToolTip>\n    );\n};\n\nconst Oval = ({ locked, index, stepIndex, completedIndex }) => {\n    const showCheck = locked && index < completedIndex && stepIndex !== index;\n    return <div className={styles.oval}>{showCheck ? <Icon name=\"check\" /> : index + 1}</div>;\n};\n\nTimeline.propTypes = {\n    stepIndex: PropTypes.number.isRequired,\n    changeStepIndex: PropTypes.func,\n    isLoading: PropTypes.bool,\n    locked: PropTypes.bool,\n    titles: PropTypes.arrayOf(PropTypes.string)\n};\n\nTimeline.defaultProps = {\n    stepIndex: 0,\n    locked: true\n};\n"]},"metadata":{},"sourceType":"module"}