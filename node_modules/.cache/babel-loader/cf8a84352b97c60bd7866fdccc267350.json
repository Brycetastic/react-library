{"ast":null,"code":"var _jsxFileName = \"/Users/bmarshall/react-library/src/components/DropDown/DropDown.jsx\";\nimport React from 'react';\nimport Select, { components } from 'react-select';\nimport DropdownArrow from './DropdownArrow';\nimport CheckBoxSelection from './CheckBoxSelection';\nimport classnames from 'classnames';\nimport styles from './DropDown.module.scss'; // import { Icon } from '../';\n\nconst gray3 = '#E7E8EA';\nconst gray4 = '#dadcdf';\nconst gray5 = '#CED1D5';\nconst gray6 = '#afb3ba';\nconst gray10 = '#2f3337';\nconst blue = '#0485CC';\nconst blueLight = '#F0F7FA';\nconst customStyles = {\n  control: (provided, state) => ({ ...provided,\n    background: state.isFocused ? gray5 : gray3,\n    border: '0',\n    'border-radius': '2px',\n    'box-shadow': 'none',\n    'min-height': '32px'\n  }),\n  valueContainer: provided => ({ ...provided,\n    color: gray10,\n    'font-size': '14px',\n    padding: '0 0 0 12px'\n  }),\n  dropdownIndicator: provided => ({ ...provided,\n    color: gray10,\n    padding: '0 16px'\n  }),\n  indicatorSeparator: () => ({\n    display: 'none'\n  }),\n  menu: provided => ({ ...provided,\n    color: gray10,\n    'border-radius': '2px',\n    'box-shadow': '0 1px 3px rgba(0, 0, 0, 0.2)'\n  }),\n  option: (provided, {\n    isDisabled,\n    isSelected\n  }) => ({ ...provided,\n    color: isDisabled ? gray6 : gray10,\n    backgroundColor: isDisabled ? null : isSelected ? blueLight : null,\n    '&:hover': isDisabled ? null : {\n      'background-color': blue,\n      color: 'white'\n    }\n  }),\n  multiValue: (styles, {\n    data\n  }) => {\n    return { ...styles,\n      borderLeft: `3px solid ${data.color}`,\n      lineHeight: '1.5'\n    };\n  },\n  multiValueLabel: provided => {\n    return { ...provided,\n      flex: 1\n    };\n  }\n};\nconst lightStyles = {\n  control: (provided, state) => ({ ...provided,\n    background: 'white',\n    border: '1px solid #dadcdf',\n    'border-color': state.isFocused ? blue : gray4,\n    'border-radius': '2px',\n    'box-shadow': 'none',\n    'min-height': '40px'\n  }),\n  multiValue: (styles, {\n    data\n  }) => {\n    return { ...styles,\n      borderLeft: `3px solid ${data.color}`,\n      lineHeight: '1.5'\n    };\n  }\n};\nconst hideDropdownIndicator = {\n  dropdownIndicator: () => ({\n    display: 'none'\n  })\n}; // found this solution here https://github.com/JedWatson/react-select/issues/685\n\nconst DropdownIndicator = props => {\n  return components.DropdownIndicator && React.createElement(components.DropdownIndicator, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(DropdownArrow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }));\n};\n\nexport default function DropDown(props) {\n  const {\n    className,\n    hideDropdown,\n    multiValueSize,\n    isCheckBox,\n    ...other\n  } = props;\n\n  if (isCheckBox) {\n    return React.createElement(CheckBoxSelection, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Select, Object.assign({\n    components: other.isMulti ? null : {\n      DropdownIndicator\n    },\n    styles: { ...customStyles,\n      ...(other.isMulti && lightStyles),\n      ...(hideDropdown && hideDropdownIndicator),\n      ...(multiValueSize && {\n        multiValue: (provided, {\n          data\n        }) => ({ ...provided,\n          borderLeft: `3px solid ${data.color || gray3}`,\n          lineHeight: '1.5',\n          width: `calc(${multiValueSize}% - 8px)` || 'initial'\n        })\n      })\n    },\n    className: classnames(styles.wrapper, className, {\n      [styles.light]: other.isMulti\n    }),\n    classNamePrefix: \"dropDown\"\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/bmarshall/react-library/src/components/DropDown/DropDown.jsx"],"names":["React","Select","components","DropdownArrow","CheckBoxSelection","classnames","styles","gray3","gray4","gray5","gray6","gray10","blue","blueLight","customStyles","control","provided","state","background","isFocused","border","valueContainer","color","padding","dropdownIndicator","indicatorSeparator","display","menu","option","isDisabled","isSelected","backgroundColor","multiValue","data","borderLeft","lineHeight","multiValueLabel","flex","lightStyles","hideDropdownIndicator","DropdownIndicator","props","DropDown","className","hideDropdown","multiValueSize","isCheckBox","other","isMulti","width","wrapper","light"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select, { components } from 'react-select';\nimport DropdownArrow from './DropdownArrow';\nimport CheckBoxSelection from './CheckBoxSelection';\nimport classnames from 'classnames';\nimport styles from './DropDown.module.scss';\n// import { Icon } from '../';\n\nconst gray3 = '#E7E8EA';\nconst gray4 = '#dadcdf';\nconst gray5 = '#CED1D5';\nconst gray6 = '#afb3ba';\nconst gray10 = '#2f3337';\nconst blue = '#0485CC';\nconst blueLight = '#F0F7FA';\n\nconst customStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        background: state.isFocused ? gray5 : gray3,\n        border: '0',\n        'border-radius': '2px',\n        'box-shadow': 'none',\n        'min-height': '32px'\n    }),\n    valueContainer: provided => ({\n        ...provided,\n        color: gray10,\n        'font-size': '14px',\n        padding: '0 0 0 12px'\n    }),\n    dropdownIndicator: provided => ({\n        ...provided,\n        color: gray10,\n        padding: '0 16px'\n    }),\n    indicatorSeparator: () => ({\n        display: 'none'\n    }),\n    menu: provided => ({\n        ...provided,\n        color: gray10,\n        'border-radius': '2px',\n        'box-shadow': '0 1px 3px rgba(0, 0, 0, 0.2)'\n    }),\n    option: (provided, { isDisabled, isSelected }) => ({\n        ...provided,\n        color: isDisabled ? gray6 : gray10,\n        backgroundColor: isDisabled ? null : isSelected ? blueLight : null,\n        '&:hover': isDisabled\n            ? null\n            : {\n                  'background-color': blue,\n                  color: 'white'\n              }\n    }),\n    multiValue: (styles, { data }) => {\n        return {\n            ...styles,\n            borderLeft: `3px solid ${data.color}`,\n            lineHeight: '1.5'\n        };\n    },\n    multiValueLabel: provided => {\n        return {\n            ...provided,\n            flex: 1\n        };\n    }\n};\n\nconst lightStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        background: 'white',\n        border: '1px solid #dadcdf',\n        'border-color': state.isFocused ? blue : gray4,\n        'border-radius': '2px',\n        'box-shadow': 'none',\n        'min-height': '40px'\n    }),\n    multiValue: (styles, { data }) => {\n        return {\n            ...styles,\n            borderLeft: `3px solid ${data.color}`,\n            lineHeight: '1.5'\n        };\n    }\n};\n\nconst hideDropdownIndicator = {\n    dropdownIndicator: () => ({\n        display: 'none'\n    })\n};\n\n// found this solution here https://github.com/JedWatson/react-select/issues/685\nconst DropdownIndicator = props => {\n    return (\n        components.DropdownIndicator && (\n            <components.DropdownIndicator {...props}>\n                <DropdownArrow />\n            </components.DropdownIndicator>\n        )\n    );\n};\n\nexport default function DropDown(props) {\n    const { className, hideDropdown, multiValueSize, isCheckBox, ...other } = props;\n    if (isCheckBox) {\n        return <CheckBoxSelection {...props} />;\n    }\n    return (\n        <Select\n            components={other.isMulti ? null : { DropdownIndicator }}\n            styles={{\n                ...customStyles,\n                ...(other.isMulti && lightStyles),\n                ...(hideDropdown && hideDropdownIndicator),\n                ...(multiValueSize && {\n                    multiValue: (provided, { data }) => ({\n                        ...provided,\n                        borderLeft: `3px solid ${data.color || gray3}`,\n                        lineHeight: '1.5',\n                        width: `calc(${multiValueSize}% - 8px)` || 'initial'\n                    })\n                })\n            }}\n            className={classnames(styles.wrapper, className, {\n                [styles.light]: other.isMulti\n            })}\n            classNamePrefix=\"dropDown\"\n            {...other}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}