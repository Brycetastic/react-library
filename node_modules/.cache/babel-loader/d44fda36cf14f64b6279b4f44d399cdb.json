{"ast":null,"code":"var _jsxFileName = \"/Users/bmarshall/react-library/src/components/Toast/ToastWrapper.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Portal, Toast } from '../';\nimport styles from './Toast.module.scss';\n\nclass ToastWrapper extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      toastArray: []\n    };\n\n    this.autoClose = toastObj => {\n      return setTimeout(() => {\n        this.onClose(toastObj);\n      }, 4000);\n    };\n\n    this.onClose = toastObj => {\n      this.setState(({\n        toastArray\n      }) => ({\n        toastArray: toastArray.filter(item => item.key !== toastObj.key)\n      }));\n    };\n\n    this.onHover = toastObj => {\n      this.setState(({\n        toastArray\n      }) => ({\n        toastArray: toastArray.map(item => item.key === toastObj.key ? { ...item,\n          timer: clearTimeout(item.timer)\n        } : item)\n      }));\n    };\n\n    this.onBlur = toastObj => {\n      this.setState(({\n        toastArray\n      }) => ({\n        toastArray: toastArray.map(item => item.key === toastObj.key ? { ...item,\n          timer: this.autoClose(item)\n        } : item)\n      }));\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      toastObj\n    } = this.props;\n\n    if (prevProps.toastObj !== toastObj) {\n      this.setState(({\n        toastArray\n      }) => ({\n        toastArray: [...toastArray.filter(item => {\n          if (item.key === toastObj.key) {\n            clearTimeout(item.timer);\n            return false;\n          }\n\n          return true;\n        }), { ...toastObj,\n          timer: this.autoClose(toastObj)\n        }]\n      }));\n    }\n  }\n\n  render() {\n    const {\n      appendToID\n    } = this.props;\n    const {\n      toastArray\n    } = this.state;\n    return React.createElement(Portal, {\n      appendToID: appendToID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      component: \"div\",\n      className: styles.toastWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, toastArray.map(item => React.createElement(CSSTransition, {\n      timeout: 500,\n      classNames: \"toastBox\",\n      key: item.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.toastBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Toast, Object.assign({\n      onClose: () => this.onClose(item),\n      onHover: () => this.onHover(item),\n      onBlur: () => this.onBlur(item),\n      isOpen: item.animate === 'in'\n    }, item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nToastWrapper.propTypes = {\n  appendToID: PropTypes.string,\n  toastObj: PropTypes.object\n};\nexport default ToastWrapper;","map":{"version":3,"sources":["/Users/bmarshall/react-library/src/components/Toast/ToastWrapper.jsx"],"names":["React","Component","PropTypes","CSSTransition","TransitionGroup","Portal","Toast","styles","ToastWrapper","state","toastArray","autoClose","toastObj","setTimeout","onClose","setState","filter","item","key","onHover","map","timer","clearTimeout","onBlur","componentDidUpdate","prevProps","props","render","appendToID","toastWrapper","toastBox","animate","propTypes","string","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Portal, Toast } from '../';\nimport styles from './Toast.module.scss';\n\nclass ToastWrapper extends Component {\n    static propTypes = {\n        appendToID: PropTypes.string,\n        toastObj: PropTypes.object\n    };\n\n    state = {\n        toastArray: []\n    };\n\n    componentDidUpdate(prevProps) {\n        const { toastObj } = this.props;\n\n        if (prevProps.toastObj !== toastObj) {\n            this.setState(({ toastArray }) => ({\n                toastArray: [\n                    ...toastArray.filter(item => {\n                        if (item.key === toastObj.key) {\n                            clearTimeout(item.timer);\n                            return false;\n                        }\n                        return true;\n                    }),\n                    {\n                        ...toastObj,\n                        timer: this.autoClose(toastObj)\n                    }\n                ]\n            }));\n        }\n    }\n\n    autoClose = toastObj => {\n        return setTimeout(() => {\n            this.onClose(toastObj);\n        }, 4000);\n    };\n\n    onClose = toastObj => {\n        this.setState(({ toastArray }) => ({\n            toastArray: toastArray.filter(item => item.key !== toastObj.key)\n        }));\n    };\n\n    onHover = toastObj => {\n        this.setState(({ toastArray }) => ({\n            toastArray: toastArray.map(item =>\n                item.key === toastObj.key ? { ...item, timer: clearTimeout(item.timer) } : item\n            )\n        }));\n    };\n\n    onBlur = toastObj => {\n        this.setState(({ toastArray }) => ({\n            toastArray: toastArray.map(item =>\n                item.key === toastObj.key ? { ...item, timer: this.autoClose(item) } : item\n            )\n        }));\n    };\n\n    render() {\n        const { appendToID } = this.props;\n        const { toastArray } = this.state;\n\n        return (\n            <Portal appendToID={appendToID}>\n                <TransitionGroup component=\"div\" className={styles.toastWrapper}>\n                    {toastArray.map(item => (\n                        <CSSTransition timeout={500} classNames=\"toastBox\" key={item.key}>\n                            <div className={styles.toastBox}>\n                                <Toast\n                                    onClose={() => this.onClose(item)}\n                                    onHover={() => this.onHover(item)}\n                                    onBlur={() => this.onBlur(item)}\n                                    isOpen={item.animate === 'in'}\n                                    {...item}\n                                />\n                            </div>\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </Portal>\n        );\n    }\n}\n\nexport default ToastWrapper;\n"]},"metadata":{},"sourceType":"module"}