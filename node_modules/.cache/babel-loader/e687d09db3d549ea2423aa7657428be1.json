{"ast":null,"code":"import isNaN from 'lodash/isNaN';\nimport { hasInHash, getHashAsArray } from './handleHash';\n\nfunction filterNumbers(item) {\n  return isNaN(parseInt(item, 10)) && item !== '';\n}\n/**\n * Returns an object containing component/section name and, optionally, an example index\n * from hash part or page URL:\n * #!/Button → { targetName: 'Button' }\n * #!/Button/1 → { targetName: 'Button', targetIndex: 1 }\n *\n * @param {string} hash\n * @returns {object}\n */\n\n\nexport default function getInfoFromHash(hash) {\n  var shouldIsolate = hasInHash(hash, '#!/');\n\n  if (shouldIsolate || hasInHash(hash, '#/')) {\n    var hashArray = getHashAsArray(hash, shouldIsolate ? '#!/' : '#/');\n    var index = parseInt(hashArray[hashArray.length - 1], 10);\n    return {\n      isolate: shouldIsolate,\n      hashArray: hashArray.filter(filterNumbers),\n      targetName: hashArray[0],\n      targetIndex: isNaN(index) ? undefined : index\n    };\n  }\n\n  return {};\n}","map":{"version":3,"sources":["/Users/bmarshall/react-library/node_modules/react-styleguidist/lib/client/utils/getInfoFromHash.js"],"names":["isNaN","hasInHash","getHashAsArray","filterNumbers","item","parseInt","getInfoFromHash","hash","shouldIsolate","hashArray","index","length","isolate","filter","targetName","targetIndex","undefined"],"mappings":"AACA,OAAOA,KAAP,MAAkB,cAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,cAA1C;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAOJ,KAAK,CAACK,QAAQ,CAACD,IAAD,EAAO,EAAP,CAAT,CAAL,IAA6BA,IAAI,KAAK,EAA7C;AACD;AACD;;;;;;;;;;;AAWA,eAAe,SAASE,eAAT,CAAyBC,IAAzB,EAA+B;AAC5C,MAAIC,aAAa,GAAGP,SAAS,CAACM,IAAD,EAAO,KAAP,CAA7B;;AAEA,MAAIC,aAAa,IAAIP,SAAS,CAACM,IAAD,EAAO,IAAP,CAA9B,EAA4C;AAC1C,QAAIE,SAAS,GAAGP,cAAc,CAACK,IAAD,EAAOC,aAAa,GAAG,KAAH,GAAW,IAA/B,CAA9B;AACA,QAAIE,KAAK,GAAGL,QAAQ,CAACI,SAAS,CAACA,SAAS,CAACE,MAAV,GAAmB,CAApB,CAAV,EAAkC,EAAlC,CAApB;AACA,WAAO;AACLC,MAAAA,OAAO,EAAEJ,aADJ;AAELC,MAAAA,SAAS,EAAEA,SAAS,CAACI,MAAV,CAAiBV,aAAjB,CAFN;AAGLW,MAAAA,UAAU,EAAEL,SAAS,CAAC,CAAD,CAHhB;AAILM,MAAAA,WAAW,EAAEf,KAAK,CAACU,KAAD,CAAL,GAAeM,SAAf,GAA2BN;AAJnC,KAAP;AAMD;;AAED,SAAO,EAAP;AACD","sourcesContent":["import \"core-js/modules/es.array.filter\";\nimport isNaN from 'lodash/isNaN';\nimport { hasInHash, getHashAsArray } from './handleHash';\n\nfunction filterNumbers(item) {\n  return isNaN(parseInt(item, 10)) && item !== '';\n}\n/**\n * Returns an object containing component/section name and, optionally, an example index\n * from hash part or page URL:\n * #!/Button → { targetName: 'Button' }\n * #!/Button/1 → { targetName: 'Button', targetIndex: 1 }\n *\n * @param {string} hash\n * @returns {object}\n */\n\n\nexport default function getInfoFromHash(hash) {\n  var shouldIsolate = hasInHash(hash, '#!/');\n\n  if (shouldIsolate || hasInHash(hash, '#/')) {\n    var hashArray = getHashAsArray(hash, shouldIsolate ? '#!/' : '#/');\n    var index = parseInt(hashArray[hashArray.length - 1], 10);\n    return {\n      isolate: shouldIsolate,\n      hashArray: hashArray.filter(filterNumbers),\n      targetName: hashArray[0],\n      targetIndex: isNaN(index) ? undefined : index\n    };\n  }\n\n  return {};\n}"]},"metadata":{},"sourceType":"module"}